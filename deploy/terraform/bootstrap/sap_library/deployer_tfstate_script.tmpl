#!/bin/bash

function main(){

    validate_deployer_input_json
    validate_deployer_tfstate
}

function validate_deployer_input_json(){

    echo "Check if deployer.json for deployer exists:"

    if [ ! -f "${deployer_terraform_json_path}" ]; then
        echo "${deployer_terraform_json_path} does not exist."
        exit 2
    else 
        echo "${deployer_terraform_json_path} exists."
        deployer_json_upload
    fi
}

function deployer_json_upload(){

    az login --identity > /dev/null
    az storage blob upload -c ${storagecontainer_deployer_name} -f ${deployer_terraform_json_path} --name ${deployer_json_name} --account-name ${tfstate_storage_account_name}

}

function validate_deployer_tfstate(){

    echo "Check if terraform.tfstate of deployer exists:"

    if [ ! -f "${deployer_terraform_tfstate_path}" ]; then
        echo "${deployer_terraform_tfstate_path} does not exist."
        exit 2
    else 
        echo "${deployer_terraform_tfstate_path} exists."
        deployer_remote_backend_init
    fi
}

function validate_deployer_remote_state(){

    az login --identity > /dev/null
    remote_state_exists=$(az storage blob exists -c ${storagecontainer_deployer_name} --name ${deployer_tfstate_name} --account-name ${tfstate_storage_account_name} | jq -r .exists)
    if $remote_state_exists; then
        echo "remote state ${deployer_tfstate_name} already exists"
        exit 0
    fi
}

function deployer_remote_backend_init(){

    echo "Start initialize remote backend for deployer"

    cp ${deployer_terraform_tfstate_path} ../

    cd ..

    rm -r .terraform

    terraform init -force-copy \
    -backend-config "resource_group_name=${saplibrary_resource_group_name}" \
    -backend-config "storage_account_name=${tfstate_storage_account_name}" \
    -backend-config "container_name=${storagecontainer_deployer_name}" \
    -backend-config "key=${deployer_tfstate_name}"

    validate_deployer_remote_state

    terraform state push "${deployer_tfstate_name}"

    rm "${deployer_tfstate_name}"
}



main "$@"

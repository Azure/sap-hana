---

# sapcontrol EXITCODES
#     0  Last webmethod call successful
#     1  Last webmethod call failed, invalid parameter
#     2  StartWait, StopWait, WaitforStarted, WaitforStopped, RestartServiceWait
#        timed out
#        CheckSystemCertificates detected warnings
#     3  GetProcessList succeeded, all processes running correctly
#        CheckSystemCertificates detected errors
#     4  GetProcessList succeeded, all processes stopped

- name: Check HANA system replication variables are set and seem valid
  assert:
    that:
      - "hana_group | trim | length != 0"
      - "sid | trim | regex_search('^[A-Za-z][A-Za-z\\d][A-Za-z\\d]$') | length == 3"  # must be 3 characters <alpha><alnum><alnum>, e.g. HN1, not 1_H
      - "instance_number | trim | regex_search('^\\d\\d$') | length == 2"  # must be 2 digits <num><num>, e.g. 00, not 0 or a0
      - "hana_system_user | trim | length != 0"
      - "hana_dir | trim | length != 0"
      - "sap_dir | trim | length != 0"
      - "tmp_ssfs_dir | trim | length != 0"

- name: Check that HANA was installed successfully and is running normally
  become_user: "{{ sid_admin_user }}"
  shell: >
    source ~/.bashrc ;
    {{ sapcontrol_command }} -function GetProcessList
  register: hana_process_list_result
  failed_when: hana_process_list_result.rc != 3
  changed_when: false

- name: Check that HANA DB system user ({{ hana_system_user }}) can access the SYSTEM database
  become_user: "{{ sid_admin_user }}"
  shell: >
    source ~/.bashrc ;
    {{ hdbsql_command }} -n {{ hana_container_address }} '{{ dummy_cmd }}'
  changed_when: false

- name: Check that HANA DB system user ({{ hana_system_user }}) can access the tenant database {{ hana_tenant_database_name }}
  become_user: "{{ sid_admin_user }}"
  shell: >
    source ~/.bashrc ;
    {{ hdbsql_command }} -n {{ hana_tenant_address }} '{{ dummy_cmd }}'
  changed_when: false

- name: Check HANA log mode is set to normal
  become_user: "{{ sid_admin_user }}"
  shell: >
    {{ hdbsql_command }} -n {{ hana_container_address }} "{{ get_log_mode_cmd }}"
  register: log_mode_status
  failed_when: log_mode_status.rc != 0 or ("normal" not in log_mode_status.stdout)
  changed_when: false
  tags:
    - skip_ansible_lint

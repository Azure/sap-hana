---

- name: Ensure the Primary node SSFS files are present on the primary node
  when: ansible_hostname == hana_database.nodes[0].dbname
  block:

    - name: Ensure the Primary node SSFS_{{ sid | upper }}.DAT file exists
      when: ansible_hostname == hana_database.nodes[0].dbname
      stat:
        path: "{{ path_ssfs_dat }}"
      register: primary_dat_file_result
      failed_when: primary_dat_file_result.failed

    - name: Ensure the Primary node SSFS_{{ sid | upper }}.KEY file exists
      stat:
        path: "{{ path_ssfs_key }}"
      register: primary_key_file_result
      failed_when: primary_key_file_result.failed

- name: Ensure key files are in place
  # If HSR is already enabled, we don't need to do this
  when: not hana_system_replication_enabled
  block:

    - name: Ensure the secondary node SSFS files are backed up and removed
      when: ansible_hostname != hana_database.nodes[0].dbname
      block:

        - name: Ensure {{ path_ssfs_dat }} file is copied
          import_tasks: copy_single_ssfs_key.yml
          vars:
            ssfs_file_path: "{{ path_ssfs_dat }}"

        - name: Ensure {{ path_ssfs_key }} file is copied
          import_tasks: copy_single_ssfs_key.yml
          vars:
            ssfs_file_path: "{{ path_ssfs_key }}"

        - name: Ensure {{ path_xsa_ssfs_dat }} file is copied
          import_tasks: copy_single_ssfs_key.yml
          vars:
            ssfs_file_path: "{{ path_xsa_ssfs_dat }}"

        - name: Ensure {{ path_xsa_ssfs_key }} file is copied
          import_tasks: copy_single_ssfs_key.yml
          vars:
            ssfs_file_path: "{{ path_xsa_ssfs_key }}"

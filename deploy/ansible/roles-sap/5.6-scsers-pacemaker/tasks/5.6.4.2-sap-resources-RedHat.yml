---

# RHEL Clustering - Deploy ASCS/ERS cluster resources
# Azure ref: https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-rhel-netapp-files

#[1] Create the SAP cluster resources
#If using enqueue server 1 architecture (ENSA1), define the resources as follows:

- name:                                "SAP Resources - Cluster Configuration after Install "
  block: 
    - name:                            "Set the cluster on maintenace mode"
      ansible.builtin.shell:           pcs property set maintenance-mode=true

    - name:                            "Configure SAP ASCS/SCS resources"
      ansible.builtin.shell: >
                                       pcs resource create rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }} SAPInstance \
                                       InstanceName={{ sap_sid }}_ASCS{{ scs_instance_number }}_{{ scs_virtual_hostname }} START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ASCS{{ scs_instance_number }}_{{ scs_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false \
                                       meta resource-stickiness=5000 migration-threshold=1 failure-timeout=60 \
                                       op monitor interval=20 on-fail=restart timeout=60 \
                                       op start interval=0 timeout=600 op stop interval=0 timeout=600 \
                                       --group g-{{ sap_sid }}_ASCS
    
    - name:                            "Set the ASCS resource stickiness"
      ansible.builtin.shell:           pcs resource meta g-{{ sap_sid }}_ASCS resource-stickiness=3000

    - name:                            "Configure SAP ERS resources"
      ansible.builtin.shell: >
                                       pcs resource create rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }} SAPInstance \
                                       InstanceName={{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }} START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false IS_ERS=true \
                                       op monitor interval=20 on-fail=restart timeout=60 \
                                       op start interval=0 timeout=600 \
                                       op stop interval=0 timeout=600 \
                                       --group g-{{ sap_sid }}_AERS

    - name:                            "Configure Colocation Constraints"
      ansible.builtin.shell: |                                  
                                       pcs constraint colocation add g-{{ sap_sid }}_AERS with g-{{ sap_sid }}_ASCS -5000
                                       pcs constraint location rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }} rule score=2000 runs_ers_{{ sap_sid }} eq 1
                                       pcs constraint order start g-{{ sap_sid }}_ASCS then stop g-{{ sap_sid }}_AERS kind=Optional symmetrical=false

    - name:                            "Bring Primary node online"
      ansible.builtin.shell:           pcs node unstandby {{ primary_instance_name }}
 
    - name:                           "Set the Cluster out of maintenance mode"
      ansible.builtin.shell:          pcs property set maintenance-mode=false
 
  when: 
    - inventory_hostname == primary_instance_name
    - variable == ensa1


# Use the following if using ENSA2 


- name:                                "SAP Resources - Cluster Configuration after Install "
  block: 
    - name:                            "Set the cluster on maintenace mode"
      ansible.builtin.shell:           pcs property set maintenance-mode=true

    - name:                            "Configure SAP ASCS/SCS resources"
      ansible.builtin.shell: >
                                       pcs resource create rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }} SAPInstance \
                                       InstanceName={{ sap_sid }}_ASCS{{ scs_instance_number }}_{{ scs_virtual_hostname }} START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ASCS{{ scs_instance_number }}_{{ scs_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false \
                                       meta resource-stickiness=5000 
                                       op monitor interval=20 on-fail=restart timeout=60 \
                                       op start interval=0 timeout=600 op stop interval=0 timeout=600 \
                                       --group g-{{ sap_sid }}_ASCS
    
    - name:                            "Set the ASCS resource stickiness"
      ansible.builtin.shell:           pcs resource meta g-{{ sap_sid }}_ASCS resource-stickiness=3000

    - name:                            "Configure SAP ERS resources"
      ansible.builtin.shell: >
                                       pcs resource create rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }} SAPInstance \
                                       InstanceName={{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }} START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false IS_ERS=true \
                                       op monitor interval=20 on-fail=restart timeout=60 \
                                       op start interval=0 timeout=600 \
                                       op stop interval=0 timeout=600 \
                                       --group g-{{ sap_sid }}_AERS
    
    - name:                            "Set the ERS resource stickiness"
      ansible.builtin.shell:           pcs resource meta rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }}  resource-stickiness=3000

    - name:                            "Configure Colocation Constraints"
      ansible.builtin.shell: |                                  
                                       pcs constraint colocation add g-{{ sap_sid }}_AERS with g-{{ sap_sid }}_ASCS -5000
                                       pcs constraint order start g-{{ sap_sid }}_ASCS then start g-{{ sap_sid }}_AERS kind=Optional symmetrical=false
                                       pcs constraint order start g-{{ sap_sid }}_ASCS then stop g-{{ sap_sid }}_AERS kind=Optional symmetrical=false
   
    - name:                            "Bring Primary node online"
      ansible.builtin.shell:           pcs node unstandby {{ primary_instance_name }}
 
    - name:                            "Set the Cluster out of maintenance mode"
      ansible.builtin.shell:           pcs property set maintenance-mode=false
 
  when: 
    - inventory_hostname == primary_instance_name
    - variable == ensa2

#End of SAP Resources cluster configuration 
...


---

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |     Copy SSFS Keys                                                         |
# |                                                                            |
# +------------------------------------4--------------------------------------*/


- name:                                HSR - Ensure the Primary node SSFS files are present on the primary node
  block:

    - name:                            HSR - Ensure the Primary node SSFS_{{ hdb_db_sid | upper }}.DAT file exists
      ansible.builtin.stat:
        path:                          "{{ path_ssfs_dat }}"
      register:                        primary_dat_file_result
      failed_when:                     primary_dat_file_result.failed
      when:                            ansible_hostname == primary_instance_name

    - name:                            HSR - Ensure the Primary node SSFS_{{ db_sid | upper }}.KEY file exists
      ansible.builtin.stat:
        path:                          "{{ path_ssfs_key }}"
      register:                        primary_key_file_result
      failed_when:                     primary_key_file_result.failed

    - name:                            HSR - Ensure the Primary node XSA SSFS_{{ db_sid | upper }}.DAT file exists
      ansible.builtin.stat:
        path:                          "{{ path_xsa_ssfs_dat }}"
      register:                        primary_xsa_dat_file_result
      failed_when:                     false

    - name:                            HSR - Ensure the Primary node XSA SSFS_{{ db_sid | upper }}.KEY file exists
      ansible.builtin.stat:
        path:                          "{{ path_xsa_ssfs_key }}"
      register:                        primary_xsa_key_file_result
      failed_when:                     false

    - name:                            HSR - Ensure XSA install fact set
      ansible.builtin.set_fact:
        xsa_installed:                 "{{ (primary_xsa_dat_file_result.stat.exists and primary_xsa_key_file_result.stat.exists) | bool }}"

    - name:                            HSR - Temporary changes to primary node
      ansible.builtin.lineinfile:
        state:                         present
        dest:                          /etc/ssh/sshd_config
        regexp:                        'PasswordAuthentication no'
        line:                          'PasswordAuthentication yes'
      become:                          true
      register:                        auth_changed
      notify:
        - restart sshd service

    - name:                            HSR - Temporary changes to primary node (debug)
      ansible.builtin.debug:
        var:                           auth_changed
        verbosity:                     2

    - name:                            HSR - Temporary changes to primary node (save)
      ansible.builtin.set_fact:
        auth_is_changed:               "{{ auth_changed.changed | bool }}"

    - name:                            HSR - restart sshd service
      ansible.builtin.service:
        name:                          sshd
        state:                         restarted
      become:                          true
      when:                            auth_is_changed

    - name:                            Pause
      ansible.builtin.pause:
        seconds:                       15
      when:                            auth_is_changed

    - name:                            HSR - Ensure the primary node {{ path_ssfs_dat }} file is placed on the controller node (fetch)
      become_user:                     "{{ db_sid | lower }}adm"
      become:                          true
      ansible.builtin.fetch:
        src:                           "{{ path_ssfs_dat }}"
        dest:                          "/tmp/{{ path_ssfs_dat | basename }}"

    - name:                            HSR - Ensure the primary node {{ path_ssfs_key }} file is placed on the controller node (fetch)
      become_user:                     "{{ db_sid | lower }}adm"
      become:                          true
      ansible.builtin.fetch:
        src:                           "{{ path_ssfs_key }}"
        dest:                          "/tmp/{{ path_ssfs_key | basename }}"

  when:                                ansible_hostname == primary_instance_name
    # Note. Both files need to be present to confirm xsa has been installed.
    # If both files are missing, we skip the xsa file copy tasks.
    # If only one file is present, the copy tasks will fail, which is sensible.

- name:                                HSR - Ensure key files are in place
  # If HSR is already enabled, we don't need to do this

  block:
    - name:                            HSR - Ensure {{ path_ssfs_dat }} file is copied
      import_tasks:                    4.0.1.3.0-copy_single_ssfs_key.yml
      vars:
        ssfs_file_path:                "{{ path_ssfs_dat }}"

    - name:                            HSR - Ensure {{ path_ssfs_key }} file is copied
      import_tasks:                    4.0.1.3.0-copy_single_ssfs_key.yml
      vars:
        ssfs_file_path:                "{{ path_ssfs_key }}"

    - name:                            HSR - Ensure XSA key files are copied if they exist
      block:

        - name:                        HSR - Ensure {{ path_xsa_ssfs_dat }} file is copied
          import_tasks:                4.0.1.3.0-copy_single_ssfs_key.yml
          vars:
            ssfs_file_path:            "{{ path_xsa_ssfs_dat }}"

        - name:                        HSR - Ensure {{ path_xsa_ssfs_key }} file is copied
          import_tasks:                4.0.1.3.0-copy_single_ssfs_key.yml
          vars:
            ssfs_file_path:            "{{ path_xsa_ssfs_key }}"
      when:
        - xsa_installed is defined
        - xsa_installed

  when: not hana_system_replication_enabled

- name:                              HSR - Temporary changes to primary node
  ansible.builtin.lineinfile:
    state:                             present
    dest:                              /etc/ssh/sshd_config
    regexp:                            'PasswordAuthentication no'
    line:                              'PasswordAuthentication yes'
  become:                              true
  notify:
    - restart sshd service
  when:                                ansible_hostname == primary_instance_name

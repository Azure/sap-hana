---

- name: HSR - Ensure backup directory exists for HANA database with System Identifier {{ hdb_sid }}
  file:
    path: "{{ hdb_sid_backup_dir }}"
    state: directory
    owner: "{{ hdb_sid_admin_user }}"

- name: HSR - Ensure backup is taken on primary node
  # If HSR is already enabled, we don't need to do this
  become_user: "{{ hdb_sid_admin_user }}"
  block:
    - name:                            "HSR - Check whether backup exists for SYSTEMDB database for System Identifier {{ db_sid }}"
      ansible.builtin.shell: >
        . ~/.bashrc && {{ hdbsql_systemdb_command }} "{{ backup_exists_cmd_for_systemdb }}"
      register: backup_exists_cmd_for_systemdb_result
      changed_when: false

    - name:                            "HSR - Debug: Check whether backup exists for SYSTEMDB database for System Identifier {{ db_sid }}"
      ansible.builtin.debug:
        var:                           backup_cmd_no_rows_found
        verbosity:                     2

    - name:                            "HSR - Debug: Check whether backup exists for SYSTEMDB database for System Identifier {{ db_sid }}"
      ansible.builtin.debug:
        var:                           backup_exists_cmd_for_systemdb_result.stdout
        verbosity:                     2


    - name:                            "HSR - Ensure backup exists for SYSTEMDB database for System Identifier {{ db_sid }}"
      ansible.builtin.set_fact:
        backup_systemdb:               "{{ ( backup_cmd_no_rows_found in backup_exists_cmd_for_systemdb_result.stdout) }}"
    
    - name:                            "HSR - Debug: Check whether backup exists for SYSTEMDB database for System Identifier {{ db_sid }}"
      ansible.builtin.debug:
        var:                           backup_systemdb

    - name:                            "HSR - Backup SYSTEMDB database for System Identifier {{ db_sid }}"
      ansible.builtin.shell: >
        . ~/.bashrc && {{ hdbsql_systemdb_command }} "{{ backup_cmd_for_systemdb }}"
      vars:
        # Note. Conditional bare variables deprecation notice is supressed here by ansible.cfg
        backup_required:               "('{{ backup_cmd_no_rows_found }}' in backup_exists_cmd_for_systemdb_result.stdout)"
      when:                            backup_required

    - name: HSR - Check if there is a tenant db needing backup
      block:
        - name:                        "HSR - Check whether backup exists for tenant {{ hana_tenant_database_name }} database for System Identifier {{ db_sid }}"
          ansible.builtin.shell: >
            . ~/.bashrc && {{ hdbsql_tenant_command }} "{{ backup_exists_cmd_for_tenant }}"
          register: backup_exists_cmd_for_tenant_result
          changed_when: false

        - name:                        "HSR - Check whether backup exists for tenant {{ hana_tenant_database_name }} database for System Identifier {{ db_sid }}"
          ansible.builtin.set_fact:
            backup_tenantdb:           "{{ ( backup_cmd_no_rows_found in backup_exists_cmd_for_tenant_result.stdout) }}"

        - name:                        "HSR - Backup {{ hana_tenant_database_name }} database for System Identifier {{ db_sid }}"
          ansible.builtin.shell: >
            . ~/.bashrc && {{ hdbsql_tenant_command }} "{{ backup_cmd_for_tenant }}"
          when:                        backup_tenantdb
      when:                            
        - hana_has_tenant_db is defined
        - hana_has_tenant_db

  when:                                ansible_hostname == primary_instance_name and not hana_system_replication_enabled

#   SAP: Register BOM
#   Export environment variables for Oracle Installation
#   Run the Oracle universal installer in silent mode. Refer to SAP Note : 2660017 Oracle Software Installation on Unix
#

# TODO: Considerations
#         15G+ swap space for Oracle DB installation.
#         MAke the installer more version independent
#

---

- name:  
  ansible.builtin.set_fact:
    dir_params:                   "{{ target_media_location }}/.params"

- name:     "Create run flag directory"
  ansible.builtin.file:
    path:   /oracle/sap_deployment_automation
    state:  directory
    mode:   0755


#  START OF ORACLE SOFTWARE INSTALLATION USING SAP RUNINSTALLER WRAPPER.


#BEFORE RUNNING INSTALLER SETENV DB_SID AND CV_ASSUME_DISTID VALUES ARE SET ACCORDING TO SAP NOTE 2660017 Oracle Software Installation on Unix

#STEP1 RUN THE PRE-REQUISITE INSTALLATION - CHECK.

- name:                           "Execute RUNINSTALLER"
  ansible.builtin.shell: |
                                  set -o errexit
                                  ./RUNINSTALLER -ohcheck -silent |tee -a /oracle/pre-req.log
  register:                       oraprecheck_results
  failed_when:                    oraprecheck_results.rc >= 3
  environment:
    DB_SID:                       "{{db_sid}}"
    CV_ASSUME_DISTID:             OL7

  args:
    executable:                   /bin/csh        
    chdir:                        "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"
    #creates:          /oracle/sap_deployment_automation/precheck.txt



#Debug for testing
- name:                           "installer prechecks ouput"
  debug:
    var:                           oraprecheck_results


#STEP2 RUN THE INSTALLATION - EXECUTE.

- name:                           "Execute RUNINSTALLER"
  ansible.builtin.shell: |
                                  set -o errexit
                                  ./RUNINSTALLER -silent |tee -a /oracle/install.log
  register:                       orainstaller_results
  failed_when:                    orainstaller_results.rc >= 2              #installer returns rc=1 (exited with warning) by default when run is silent mode as the oratab file is created only after running the root.sh
  environment:
    DB_SID:                       "{{db_sid}}"
    CV_ASSUME_DISTID:             OL7
  args:
    executable:                   /bin/csh        
    chdir:                        "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"
    creates:                      /oracle/sap_deployment_automation/oracleinstall.txt


- name:                            Create oracleinstall.txt
  ansible.builtin.file:
    path:                          /oracle/sap_deployment_automation/oracleinstall.txt
    state:                         touch
    mode:                          0755



#STEP3 POST PROCESSING.


- name:                            "Oracle Post Processing - Run root.sh"                
  become:                          yes
  become_user:                     root
  ansible.builtin.shell: |   
                                   /oracle/oraInventory/orainstRoot.sh    
                                   /oracle/{{db_sid}}/19.0.0/root.sh
  register:                        rootscript_results
  args:
    executable:                    /bin/csh
    creates:                       /oracle/sap_deployment_automation/rootscripstexecuted.txt

- name:                            Create rootscripstexecuted.txt
  ansible.builtin.file:
    path:                          /oracle/{{db_sid|upper }}/19.0.0/bin/oracle
    state:                         directory
    mode:                          6751

- name:                            Create rootscripstexecuted.txt
  ansible.builtin.file:
    path:                          /oracle/sap_deployment_automation/rootscripstexecuted.txt
    state:                         touch
    mode:                          0755


#STEP 4 SBP Patching for Oracle.

- name:                            "Oracle Post Processing - SBP Patching"                
  become:                          yes
  become_user:                     "oracle"
  ansible.builtin.shell: |   
                                  set -o errexit
                                  mv  /oracle/{{db_sid}}/19.0.0/OPatch   /oracle/{{db_sid}}/19.0.0/OPatch.bck 
                                  cp -R OPATCH/OPatch  /oracle/{{db_sid}}/19.0.0/.
                                  cp -R SAPSBP/SBP_191200210720_202108/MOPatch  /oracle/{{db_sid}}/19.0.0/.
                                  $IHRDBMS/MOPatch/mopatch.sh -v -s /usr/sap/install/SBP/SAP19P_2108-70004508.ZIP |tee -a /oracle/sbp.log
  environment:
    DB_SID:                       "{{db_sid}}"
    CV_ASSUME_DISTID:             OL7
    IHRDBMS:                      /oracle/{{db_sid}}/19.0.0
    ORACLE_HOME:                  /oracle/{{db_sid}}/19.0.0
    RDBMS:                        /oracle/{{db_sid}}/19
  register:                       sbpscript_results
  failed_when:                    sbpscript_results.rc >= 2 
  args:
    executable:                   /bin/csh
    chdir:                        "/usr/sap/install/SBP/"
    creates:                      /oracle/sap_deployment_automation/sbpinstalled.txt

- name:                            Create sbpinstalled.txt
  ansible.builtin.file:
    path:                          /oracle/sap_deployment_automation/sbpinstalled.txt
    state:                         touch
    mode:                          0755


# Debug for testing
- name:                            "installer output"
  debug:
    var:                           
     - orainstaller_results
     - rootscript_results
    verbosity:                     2

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/

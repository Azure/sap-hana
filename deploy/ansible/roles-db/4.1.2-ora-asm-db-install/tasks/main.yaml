#   SAP: Register BOM
#   Install and configure Database on ASM.
#

# TODO: Considerations
#         15G+ swap space for Oracle DB installation.
#         message server acl
#         certificates
#         secure storage key
#

---

- name:  
  ansible.builtin.set_fact:
    dir_params:                   "{{ target_media_location }}/.params"


- name:                                Load the disk configuration settings
  ansible.builtin.include_vars:        disks_config_asm.yml


#   Oracle DB install: Response file
- name:                               "SAP Oracle ASM: deploy Database install response file"
  ansible.builtin.template:
    src:                              ORACLE_{{ ora_release }}c_00_asm_db_v1_install.rsp.j2
    dest:                             "/oracle/sap_deployment_automation/ORACLE_{{ ora_release }}c_00_asm_db_{{ ansible_hostname }}_{{ anydb_sid }}_install.rsp"
    mode:                             0644
    force:                            true


#STEP1 Unzip the Oracle  Software
# Running the standard SAP installer to extract the files to /oracle/<sid>/19.0.0
- name:               "Unzip the Oracle Software"
  become:             yes
  become_user:        oracle
  ansible.builtin.shell: |
                      set -o errexit
                      ./RUNINSTALLER -ohextract -silent |tee -a /oracle/oraextract.log
                      ln -s /oracle/{{ anydb_sid }}/{{ ora_version }} /oracle/{{ anydb_sid }}/{{ ora_release }}
                      touch /oracle/sap_deployment_automation/oraextract.txt
  register:           swinstaller_results
  failed_when:        swinstaller_results.rc >= 2   
  environment:
    DB_SID:                       "{{anydb_sid}}"
    CV_ASSUME_DISTID:             OL7
  args:
    chdir:             "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"
    creates:           /oracle/sap_deployment_automation/oraextract.txt

# Create the softlink /oracle/<sid>/19.0.0
- name:               "softlink creation for SAP SWPM"
  become:             yes
  become_user:        oracle
  ansible.builtin.shell: |
                      set -o errexit
                      ln -s {{ ora_version }} {{ ora_release }}                  
  environment:
    DB_SID:                       "{{anydb_sid}}"
    CV_ASSUME_DISTID:             OL7
  args:
    chdir:             "/oracle/{{ anydb_sid }}"
    creates:           /oracle/sap_deployment_automation/softlinkcreated.txt

- name:            "create after softlink"
  ansible.builtin.shell: |                    
                      touch /oracle/sap_deployment_automation/softlinkcreated.txt


#STEP2 RUN THE INSTALLATION - EXECUTE.

- name:               "Execute runInstaller"
  become:             yes
  become_user:        oracle
  ansible.builtin.shell: |
                      set -o errexit
                      ./runInstaller -silent -responseFile /oracle/sap_deployment_automation/ORACLE_{{ ora_release }}c_00_asm_db_{{ ansible_hostname }}_{{ anydb_sid }}_install.rsp |tee -a /oracle/dbinstall.log
  register:           dbinstaller_results
  environment:
    DB_SID:                       "{{anydb_sid}}"
    CV_ASSUME_DISTID:             OL7
  args:       
    executable:        /bin/csh
    chdir:            "/oracle/{{ anydb_sid }}/{{ ora_version }}"
    creates:           /oracle/sap_deployment_automation/dbinstall.txt

- name:            "create after a sucessfull install"
  ansible.builtin.shell: |                    
                      touch /oracle/sap_deployment_automation/dbinstall.txt


# #STEP3.1 POST PROCESSING - RUN ROOT SCRIPT.


- name:           "Oracle Post Processing - Run root.sh"                
  become:         yes
  become_user:    root
  ansible.builtin.shell: |   
                     /oracle/{{ anydb_sid }}/{{ ora_version }}/root.sh                                                       
  register: rootscript_results
  args:
    executable:       /bin/csh
    creates:          /oracle/sap_deployment_automation/dbrootscripstexecuted.txt

- name:            "creates after a sucessfull script execution"
  ansible.builtin.shell: |                    
                      touch /oracle/sap_deployment_automation/dbrootscripstexecuted.txt


#STEP3.1 POST PROCESSING - Execute DB configtools.
- name:               "Execute ASM Configtools"
  become:             yes
  become_user:        oracle
  ansible.builtin.shell: |
                      set -o errexit
                      /oracle/{{ anydb_sid }}/{{ ora_version }}/runInstaller -executeConfigTools -silent -responseFile /oracle/sap_deployment_automation/ORACLE_{{ ora_release }}c_00_asm_db_{{ ansible_hostname }}_{{ anydb_sid }}_install.rsp |tee -a /oracle/dbconfigtoolsinstall.log
  register:           dbtoolsinstaller_results
  #failed_when:        gridinstaller_results.rc >= 2              #installer returns rc=1 (exited with warning) by default when run is silent mode as the oratab file is created only after running the root.sh
  environment:
    DB_SID:                       "{{ anydb_sid }}"
    CV_ASSUME_DISTID:             OL7
  args:       
    executable:        /bin/csh
    chdir:            "/oracle/{{ anydb_sid }}/{{ ora_version }}"
    creates:           /oracle/sap_deployment_automation/dbtoolsinstall.txt

- name:            "create after a sucessfull install"
  ansible.builtin.shell: |                    
                      touch /oracle/sap_deployment_automation/dbtoolsinstall.txt


# #Update Compatiable for DATA, ARCH and RECO disk groups using ASMCA.
# Default value of rdbms compatiable is 10.1.0.0 however for SAP installation it needs a minimum value of 11.2.0.2.
# SAP Note 1739274 - Database Parameter COMPATIBLE
# SAP Note 1773593 - CREATE DATABASE  on ASM Fails with ORA-15204

- name:           "Update ASM Disk groups ARCH and RECO"                
  become:         yes
  become_user:    oracle
  ansible.builtin.shell: |   
                     set -o errexit
                     ./asmca -silent -editDiskGroupAttributes -diskGroupName DATA -attribute compatible.rdbms={{ ora_compatible }}
                     ./asmca -silent -editDiskGroupAttributes -diskGroupName ARCH -attribute compatible.rdbms={{ ora_compatible }}
                     ./asmca -silent -editDiskGroupAttributes -diskGroupName RECO -attribute compatible.rdbms={{ ora_compatible }}
                     touch /oracle/sap_deployment_automation/diskgroupupdated.txt                   
  register: diskgroupcreation_results
  environment:
    DB_SID:                       "{{anydb_sid}}"
    CV_ASSUME_DISTID:             OL7
  args:
    executable:       /bin/csh
    chdir:            /oracle/stage/{{ ora_release }}/grid_home/bin
    creates:          /oracle/sap_deployment_automation/diskgroupupdated.txt






# #   0x) remove hidden directory for parameter files
# - name:     "remove hidden directory"
#   ansible.builtin.file:
#     path:   "{{ item.path }}"
#     state:  "{{ item.state }}"
#     mode:   "{{ item.mode }}"
#   loop:
#     - { state: 'absent',    mode: '0755', path: '{{ dir_params }}' }

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/

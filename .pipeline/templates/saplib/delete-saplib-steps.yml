steps:
  - script: |
      saplib_rg=${{parameters.saplib_rg_name}}

      echo "=== Delete SAP library from deployer ==="
      ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
      source /etc/profile.d/deploy_server.sh

      saplib_rg=${{parameters.saplib_rg_name}}
      repo_dir=$HOME/${saplib_rg}/sap-hana
      ws_dir=$HOME/Azure_SAP_Automated_Deployment/WORKSPACES/SAP_LIBRARY/${saplib_rg}
      input=${ws_dir}/${saplib_rg}.json

      echo "=== Checkout required branch ${{parameters.branch_name}} ==="
      cd ${repo_dir} && git checkout ${{parameters.branch_name}}

      echo "=== Enter workspace ${ws_dir} ==="
      cd ${ws_dir}

      echo "=== Delete SAP library from deployer with terraform ==="
      echo "=== This may take quite a while, please be patient ==="
      [ -d ~/.log ] || mkdir -p ~/.log
      terraform destroy -auto-approve -var-file=${input} ${repo_dir}/deploy/terraform/bootstrap/sap_library/ 2>~/.log/$(Build.BuildId)_destroy_error.log 2>&1>~/.log/$(Build.BuildId)_destroy.log
      cat ~/.log/$(Build.BuildId)_apply_error.log;

      echo "=== Delete git clone for the build from deployer ==="
      rm -rf ~/${saplib_rg}

      echo "=== Delete worksapce ==="
      rm -rf ~/Azure_SAP_Automated_Deployment/WORKSPACES/SAP_LIBRARY/${saplib_rg}
      '
      
      echo "=== Mark and try to delete rg  ==="
      az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
      az group update --resource-group ${saplib_rg} --set tags.Delete=True --output none
      az group delete -n ${saplib_rg} --no-wait -y

      exit 0
    displayName: "Delete new saplibrary"
    condition: or(succeededOrFailed(), always())
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)

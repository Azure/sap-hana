steps:
  - script: |
      # Modify environment value so it starts with u and with length of 5
      deployer_env=${{parameters.deployer_env}}
      buildId=$(Build.BuildId)
      isRelease=${deployer_env%%$buildId*}
      if [ -z "${isRelease}" ]
      then 
        deployer_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        deployer_prefix=${deployer_env}
      fi
      
      deployer_rg="${deployer_prefix}-EAUS-MGMT-INFRASTRUCTURE"

      # Modify environment value so it starts with u and with length of 5
      saplib_env=${{parameters.saplib_env}}
      buildId=$(Build.BuildId)
      isRelease=${saplib_env%%$buildId*}
      if [ -z "${isRelease}" ]
      then 
        saplib_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        saplib_prefix=${saplib_env}
      fi

      saplib_rg="${saplib_prefix}-EAUS-SAP_LIBRARY"

      echo "=== Delete SAP library from deployer ==="
      ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
      source /etc/profile.d/deploy_server.sh

      # Modify environment value so it starts with u and with length of 5
      saplib_env=${{parameters.saplib_env}}
      buildId=$(Build.BuildId)
      isRelease=${saplib_env%%$buildId*}
      if [ -z "${isRelease}" ]
      then 
        saplib_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        saplib_prefix=${saplib_env}
      fi

      saplib_rg="${saplib_prefix}-EAUS-SAP_LIBRARY"

      repo_dir=$HOME/${saplib_rg}/sap-hana
      ws_dir=$HOME/Azure_SAP_Automated_Deployment/WORKSPACES/SAP_LIBRARY/${saplib_rg}
      input=${ws_dir}/${saplib_rg}.json

      echo "=== Checkout required branch ${{parameters.branch_name}} ==="
      cd ${repo_dir} && git checkout ${{parameters.branch_name}}

      echo "=== Enter workspace ${ws_dir} ==="
      cd ${ws_dir}

      echo "=== Delete SAP library from deployer with terraform ==="
      echo "=== This may take quite a while, please be patient ==="
      terraform destroy -auto-approve -var-file=${input} ${repo_dir}/deploy/terraform/bootstrap/sap_library/
      
      echo "=== Delete git clone for the build from deployer ==="
      rm -rf ~/${saplib_rg}

      echo "=== Delete worksapce ==="
      rm -rf ~/Azure_SAP_Automated_Deployment/WORKSPACES/SAP_LIBRARY/${saplib_rg}
      '
      
      echo "=== Mark and try to delete rg  ==="
      az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
      az group update --resource-group ${saplib_rg} --set tags.Delete=True --output none
      az group delete -n ${saplib_rg} --no-wait -y

      echo "=== Delete SPN secrets from deployer KV ==="
      deployer_kv_name=$(az keyvault list --resource-group ${deployer_rg} | jq -r '.[] | select(.name | contains("user")).name')
      az keyvault secret delete --vault-name ${deployer_kv_name} --name ${saplib_prefix}-client-id --output none
      az keyvault secret delete --vault-name ${deployer_kv_name} --name ${saplib_prefix}-client-secret --output none
      az keyvault secret delete --vault-name ${deployer_kv_name} --name ${saplib_prefix}-subscription-id --output none
      az keyvault secret delete --vault-name ${deployer_kv_name} --name ${saplib_prefix}-tenant-id --output none

      exit 0
    displayName: "Delete new saplibrary"
    condition: or(succeededOrFailed(), always())
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)

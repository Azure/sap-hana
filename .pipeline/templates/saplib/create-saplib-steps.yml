steps:
  - script: |

      echo "=== Deploy SAP library from deployer ==="
      ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
      source /etc/profile.d/deploy_server.sh

      saplib_rg=${{parameters.saplib_rg_name}}
      repo_dir=$HOME/${saplib_rg}/sap-hana
      ws_dir=$HOME/azure_sap_automated_deployment/workspaces/sap_library/${saplib_rg}
      input=${ws_dir}/${saplib_rg}.json

      echo "=== Checkout required branch ${{parameters.branch_name}} ==="
      mkdir $HOME/${saplib_rg}; cd $_
      git clone https://github.com/Azure/sap-hana.git
      cd sap-hana && git checkout ${{parameters.branch_name}}
      
      echo "=== Create workspace ${ws_dir} ==="
      mkdir -p ${ws_dir}; cd $_
      
      echo "=== Prepare input for saplibrary ==="
      cp ${repo_dir}/deploy/terraform/bootstrap/sap_library/saplibrary.json ${ws_dir}/saplibrary.json
      cat ${ws_dir}/saplibrary.json \
      | jq --arg rg_name "${saplib_rg}" .infrastructure.resource_group.name\ =\ \$rg_name \
      > ${input}
      
      echo "=== Create SAP library from deployer with terraform ==="
      echo "=== This may take quite a while, please be patient ==="
      terraform -version
      terraform init ${repo_dir}/deploy/terraform/bootstrap/sap_library/
      [ -d $HOME/.log ] || mkdir -p $HOME/.log
      terraform apply -auto-approve -var-file=${input} ${repo_dir}/deploy/terraform/bootstrap/sap_library/ 2>$HOME/.log/$(Build.BuildId)_apply_error.log 2>&1>$HOME/.log/$(Build.BuildId)_apply.log
      if [ -s $HOME/.log/$(Build.BuildId)_apply_error.log ]; then cat $HOME/.log/$(Build.BuildId)_apply_error.log; exit 1; fi;
      '

    displayName: "Deploy saplibrary: Branch ${{parameters.branch_name}}"
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)

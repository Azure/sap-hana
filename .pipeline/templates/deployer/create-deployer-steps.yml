steps:
  - script: |
      repo_path=$(pwd)
      deployer_rg=${{parameters.deployer_rg_name}}
      ws_dir=$(Agent.BuildDirectory)/azure_sap_automated_deployment/workspaces/local/${deployer_rg}
      input=${ws_dir}/${deployer_rg}.json

      git checkout ${{parameters.branch_name}}

      mkdir -p ${ws_dir}; cd $_
      cp $HOME/.ssh/id_rsa sshkey
      cp $HOME/.ssh/id_rsa.pub sshkey.pub

      cp ${repo_path}/deploy/terraform/bootstrap/sap_deployer/deployer.json deployer.json
      cat deployer.json | jq --arg allowed_ip "$(agent_ip)" --arg rg_name "${deployer_rg}" '.infrastructure += {
        landscape: $(Build.BuildId),
        resource_group: {
          name: $rg_name
        },
        vnets: {
          management: {
            subnet_mgmt: {
              nsg: {
                allowed_ips: ["67.160.0.0/16", $allowed_ip]
                }
              }
            }
          }
        }' > ${input}

      cat ${input}
      
      echo "=== Start terraform apply for new deployer ==="
      terraform -version
      terraform init ${repo_path}/deploy/terraform/bootstrap/sap_deployer/
      terraform apply -auto-approve -var-file=${input} ${repo_path}/deploy/terraform/bootstrap/sap_deployer/ 
    displayName: "Deploy deployer: Branch ${{parameters.branch_name}}"
    condition: or(succeededOrFailed(), always())
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)

steps:
  - script: |
      az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none

      git checkout ${{parameters.branch_name}}
      repo_path=$(pwd)

      # Modify environment value so it starts with u and with length of 5
      deployer_env=${{parameters.deployer_env}}
      buildId=$(Build.BuildId)
      isRelease=${deployer_env%%$buildId*}
      if [ -z "${isRelease}" ]
      then 
        deployer_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        deployer_prefix=${deployer_env}
      fi

      deployer_rg="${deployer_prefix}-EAUS-MGMT-INFRASTRUCTURE"
      ws_dir=$(Agent.BuildDirectory)/Azure_SAP_Automated_Deployment/WORKSPACES/LOCAL/${deployer_rg}

      echo "=== Start to delete deployer with terraform destroy ==="
      cd ${ws_dir}
      terraform destroy -auto-approve -var-file=${deployer_rg}.json ${repo_path}/deploy/terraform/bootstrap/sap_deployer/
      
      echo "=== Mark and try to delete rg  ==="
      az group update --resource-group ${deployer_rg} --set tags.Delete=True --output none
      az group delete -n ${deployer_rg} --no-wait -y

      exit 0
    displayName: "Delete new deployer"
    condition: or(succeededOrFailed(), always())
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)

steps:
  - script: |
      az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
      az group update --resource-group ${{parameters.deployer_rg_name}} --set tags.Delete=True
      az lock delete --name resource-group-level --resource-group ${{parameters.deployer_rg_name}}
    displayName: "Pre delete"
<<<<<<< HEAD
    condition: or(succeededOrFailed(), always())
  - script: |
      git checkout ${{parameters.branch_name}}
      repo_path=$(pwd)

      deployer_rg=${{parameters.deployer_rg_name}}

      echo "=== Start to delete deployer with terraform destroy ==="
      cd $(Agent.BuildDirectory)/Azure_SAP_Automated_Deployment/WORKSPACES/LOCAL/$deployer_rg
      terraform destroy -auto-approve -var-file=$deployer_rg.json $repo_path/deploy/terraform/bootstrap/sap_deployer/
      
      exit 0
    displayName: "Delete new deployer"
    condition: or(succeededOrFailed(), always())
=======
  - script: |
      cd deploy/terraform/bootstrap/sap_deployer

      echo "=== Start to delete deployer with terraform destroy ==="
      terraform destroy -auto-approve -var-file=deployer.json
      exit 0
    displayName: "Delete new deployer"
>>>>>>> add deployer pipeline
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)

steps:
  - script: |
      # Modify environment value so it starts with u and with length of 5
      deployer_env=${{parameters.deployer_env}}
      buildId=$(Build.BuildId)
      isRelease=${deployer_env%%$buildId*}
      if [ -z "${isRelease}" ]
      then 
        deployer_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        deployer_prefix=${deployer_env}
      fi

      deployer_rg="${deployer_prefix}-EAUS-DEP00-INFRASTRUCTURE"

      # Modify environment value so it starts with u and with length of 5
      environment_env=${{parameters.environment_env}}
      buildId=$(Build.BuildId)
      isRelease=${environment_env%%$buildId*}

      if [ -z "${isRelease}" ]
      then 
        environment_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        environment_prefix=${environment_env}
      fi

      environment_rg="${environment_prefix}-EAUS-SAP0-INFRASTRUCTURE"

      echo "=== Delete SAP system from deployer ==="
      ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
      source /etc/profile.d/deploy_server.sh

      # Modify environment value so it starts with u and with length of 5
      environment_env=${{parameters.environment_env}}
      buildId=$(Build.BuildId)
      isRelease=${environment_env%%$buildId*}

      if [ -z "${isRelease}" ]
      then 
        environment_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        environment_prefix=${environment_env}
      fi

      environment_rg="${environment_prefix}-EAUS-SAP0-INFRASTRUCTURE"

      repo_dir=$HOME/$environment_rg/sap-hana
      ws_dir=$HOME/Azure_SAP_Automated_Deployment/WORKSPACES/ENVIRONMENT/${environment_rg}
      input=${ws_dir}/${environment_rg}.json

      echo "=== Checkout required branch ${{parameters.branch_name}} ==="
      cd ${repo_dir} && git checkout ${{parameters.branch_name}}

      if [-d "${repo_dir}/deploy/terraform/run/sap_landscape" ]
      then
        foldername="sap_landscape"
      else
        foldername="environment"
      fi


      echo "=== Enter workspace ${ws_dir} ==="
      cd ${ws_dir}
      
      echo "=== Delete SAP system from deployer with terraform ==="
      echo "=== This may take quite a while, please be patient ==="
      terraform destroy -auto-approve -var-file=${input} ${repo_dir}/deploy/terraform/run/$foldername/
      
      echo "=== Delete git clone for the build from deployer ==="
      rm -rf ~/${environment_rg}

      echo "=== Cleanup local .terraform ==="
      rm -r ${ws_dir}/.terraform
      '

      vnet_name="${deployer_prefix}-EAUS-DEP00-vnet"
      echo "=== Remove vnet peering with ${vnet_name} in case deployment/destroy fails ==="
      peering_name=$(az network vnet peering list --resource-group ${deployer_rg} --vnet-name ${vnet_name} | jq -r .[].name | grep $(Build.BuildId))
      echo "=== Delete peering ${peering_name} ==="
      [ ! -z "$peering_name" ] && az network vnet peering delete --resource-group ${deployer_rg} --name ${peering_name} --vnet-name ${vnet_name}

      echo "=== Mark and try to delete rg  ==="
      az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(environment-tenant) --output none
      az group update --resource-group ${environment_rg} --set tags.Delete=True
      az group delete -n ${environment_rg} --no-wait -y

      # Delete SPN secrets from deployer KV
      echo "=== Login using pipeline spn ==="
      az login --service-principal -u $(hana-pipeline-spn-id) -p $(hana-pipeline-spn-pw) --tenant $(environment-tenant) --output none

      echo "=== Delete SPN secrets from deployer KV ==="
      deployer_kv_name=$(az keyvault list --resource-group ${deployer_rg} | jq -r '.[] | select(.name | contains("user")).name')
      az keyvault secret delete --vault-name ${deployer_kv_name} --name ${environment_prefix}-client-id --output none
      az keyvault secret delete --vault-name ${deployer_kv_name} --name ${environment_prefix}-client-secret --output none
      az keyvault secret delete --vault-name ${deployer_kv_name} --name ${environment_prefix}-subscription-id --output none
      az keyvault secret delete --vault-name ${deployer_kv_name} --name ${environment_prefix}-tenant-id --output none

      exit 0
    displayName: "Delete new sap landscape"
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(environment-tenant)
      ARM_SUBSCRIPTION_ID: $(environment-subscription)
